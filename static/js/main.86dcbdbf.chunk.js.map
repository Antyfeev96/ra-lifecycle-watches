{"version":3,"sources":["Components/Form/Form.jsx","Components/Clock/Clock.jsx","Components/Watch/Watch.jsx","Components/Watches/Watches.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","onClick","e","preventDefault","addWatch","state","city","timestamp","setState","event","target","name","value","this","className","type","id","onChange","onInputHandler","bind","Component","Clock","date","clockRef","React","createRef","canvasEl","current","setAttribute","contextEl","getContext","strokeRect","width","height","radiusClock","xCenterClock","yCenterClock","fillStyle","fillRect","strokeStyle","lineWidth","beginPath","arc","Math","PI","moveTo","stroke","closePath","radiusPoint","radiusNum","tm","xPointM","cos","yPointM","sin","th","font","xText","yText","strokeText","lengthSeconds","lengthMinutes","lengthHour","t_sec","seconds","t_min","minutes","t_hour","hours","lineTo","fill","timerID","setInterval","displayCanvas","clearInterval","ref","moment","tz","setDefault","Watch","diff","utcOffset","deleteWatch","tick","Watches","map","watch","index","key","App","useState","nanoid","prev","console","log","arr","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,QAAU,SAACC,GACTA,EAAEC,iBACF,EAAKH,MAAMI,SAAS,EAAKC,MAAMC,KAAM,EAAKD,MAAME,WAChD,EAAKC,UAAS,iBAAO,CACnBF,KAAM,GACNC,UAAW,QAhBb,EAAKF,MAAQ,CACXC,KAAM,GACNC,UAAW,IAJI,E,kDAQnB,SAAeE,GAAQ,IAAD,EACIA,EAAMC,OAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,MACdC,KAAKL,UAAS,SAACH,GAAD,mBAAC,eAAeA,GAAhB,kBAAwBM,EAAOC,S,oBAY/C,WACE,OACE,uBAAME,UAAU,OAAOH,KAAK,OAA5B,UACE,sBAAKG,UAAU,kBAAf,UACE,mFACA,uBAAOF,MAAOC,KAAKR,MAAMC,KAAMS,KAAK,OAAOJ,KAAK,OAAOK,GAAG,OAAOC,SAAUJ,KAAKK,eAAeC,KAAKN,WAEtG,sBAAKC,UAAU,kBAAf,UACE,kHACA,uBAAOF,MAAOC,KAAKR,MAAME,UAAWQ,KAAK,OAAOJ,KAAK,YAAYK,GAAG,YAAYC,SAAUJ,KAAKK,eAAeC,KAAKN,WAErH,qBAAKC,UAAU,eAAf,SACE,uBAAOC,KAAK,SAASH,MAAM,mDAAWX,QAASY,KAAKZ,mB,GAnC5BmB,a,8BCCbC,G,wDACnB,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXiB,KAAM,EAAKtB,MAAMsB,MAEnB,EAAKC,SAAWC,IAAMC,YALL,E,iDAQnB,SAAcH,GACZ,IAAMI,EAAWb,KAAKU,SAASI,QAC/BD,EAASE,aAAa,QAAS,KAC/BF,EAASE,aAAa,SAAU,KAChC,IAAMC,EAAYhB,KAAKU,SAASI,QAAQG,WAAW,MACnDD,EAAUE,WAAW,EAAG,EAAGL,EAASM,MAAON,EAASO,QAGpD,IAAMC,EAAcR,EAASM,MAAQ,EAAI,GACnCG,EAAeT,EAASM,MAAQ,EAChCI,EAAeV,EAASO,OAAS,EAGvCJ,EAAUQ,UAAY,UACtBR,EAAUS,SAAS,EAAG,EAAGZ,EAASM,MAAON,EAASO,QAGlDJ,EAAUU,YAAc,UACxBV,EAAUW,UAAY,EACtBX,EAAUY,YACVZ,EAAUa,IACRP,EACAC,EACAF,EACA,EACA,EAAIS,KAAKC,IACT,GAEFf,EAAUgB,OAAOV,EAAcC,GAC/BP,EAAUiB,SACVjB,EAAUkB,YAKV,IAHA,IACIC,EADEC,EAAYf,EAAc,GAGvBgB,EAAK,EAAGA,EAAK,GAAIA,IAAM,CAC9BrB,EAAUY,YAERO,EADEE,EAAK,IAAM,EACC,EAEA,EAGhB,IAAMC,EACJhB,EACAc,EAAYN,KAAKS,KAAK,EAAIF,GAAMP,KAAKC,GAAK,KAAOD,KAAKC,GAAK,GACvDS,EACJjB,EACAa,EAAYN,KAAKW,KAAK,EAAIJ,GAAMP,KAAKC,GAAK,KAAOD,KAAKC,GAAK,GAC7Df,EAAUa,IAAIS,EAASE,EAASL,EAAa,EAAG,EAAIL,KAAKC,IAAI,GAC7Df,EAAUiB,SACVjB,EAAUkB,YAIZ,IAAK,IAAIQ,EAAK,EAAGA,GAAM,GAAIA,IAAM,CAC/B1B,EAAUY,YACVZ,EAAU2B,KAAO,uBACjB,IAAMC,EACJtB,GACCc,EAAY,IAAMN,KAAKS,KAAK,GAAKG,GAAMZ,KAAKC,GAAK,KAAOD,KAAKC,GAAK,GAC/Dc,EACJtB,GACCa,EAAY,IAAMN,KAAKW,KAAK,GAAKC,GAAMZ,KAAKC,GAAK,KAAOD,KAAKC,GAAK,GAEjEW,GAAM,EACR1B,EAAU8B,WAAWJ,EAAIE,EAAQ,EAAGC,EAAQ,IAE5C7B,EAAU8B,WAAWJ,EAAIE,EAAQ,GAAIC,EAAQ,IAE/C7B,EAAUiB,SACVjB,EAAUkB,YAIZ,IAAMa,EAAgBX,EAAY,GAC5BY,EAAgBZ,EAAY,GAC5Ba,EAAaD,EAAgB,IAE7BE,EAAQ,EAAIzC,EAAK0C,UACjBC,EAAQ,GAAK3C,EAAK4C,UAAa,EAAE,GAAM5C,EAAK0C,WAC5CG,EAAS,IAAM7C,EAAK8C,QAAW,EAAE,GAAM9C,EAAK4C,WAGlDrC,EAAUY,YACVZ,EAAUU,YAAe,UACzBV,EAAUgB,OAAOV,EAAcC,GAC/BP,EAAUwC,OAAOlC,EAAeyB,EAAcjB,KAAKS,IAAIT,KAAKC,GAAG,EAAImB,GAASpB,KAAKC,GAAG,MACpFR,EAAewB,EAAgBjB,KAAKW,IAAIX,KAAKC,GAAG,EAAImB,GAASpB,KAAKC,GAAG,OACrEf,EAAUiB,SACVjB,EAAUkB,YAGVlB,EAAUY,YACVZ,EAAUU,YAAe,UACzBV,EAAUW,UAAY,EACtBX,EAAUgB,OAAOV,EAAcC,GAC/BP,EAAUwC,OAAOlC,EAAe0B,EAAclB,KAAKS,IAAIT,KAAKC,GAAG,EAAIqB,GAAStB,KAAKC,GAAG,MACnFR,EAAeyB,EAAclB,KAAKW,IAAIX,KAAKC,GAAG,EAAIqB,GAAStB,KAAKC,GAAG,OACpEf,EAAUiB,SACVjB,EAAUkB,YAGVlB,EAAUY,YACVZ,EAAUW,UAAY,EACtBX,EAAUgB,OAAOV,EAAcC,GAC/BP,EAAUwC,OAAOlC,EAAe2B,EAAWnB,KAAKS,IAAIT,KAAKC,GAAG,EAAIuB,GAAQxB,KAAKC,GAAG,MAC/ER,EAAe0B,EAAWnB,KAAKW,IAAIX,KAAKC,GAAG,EAAIuB,GAAQxB,KAAKC,GAAG,OAChEf,EAAUiB,SACVjB,EAAUkB,YAGVlB,EAAUY,YACVZ,EAAUU,YAAe,UACzBV,EAAUQ,UAAY,UACtBR,EAAUW,UAAY,EACtBX,EAAUa,IAAIP,EAAcC,EAAc,EAAG,EAAG,EAAIO,KAAKC,IAAI,GAC7Df,EAAUiB,SACVjB,EAAUyC,OACVzC,EAAUkB,c,+BAIZ,WAAqB,IAAD,OAClBlC,KAAK0D,QAAUC,aAAY,WACzB,EAAKhE,SAAS,CAACc,KAAM,EAAKtB,MAAMsB,OAChC,EAAKmD,cAAc,EAAKpE,MAAMiB,QAC7B,O,kCAGL,WACEoD,cAAc7D,KAAK0D,W,oBAOrB,WACE,OACE,wBAAQzD,UAAU,eAAe6D,IAAK9D,KAAKU,SAAUP,GAAG,c,GArJ3BI,cCCnCwD,IAAOC,GAAGC,WAAW,iB,IAEAC,E,kDACnB,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDgF,KAA+B,IAAvB,EAAKhF,MAAMO,UACxBqE,MAASK,UAAU,EAAKD,MACxB,EAAK3E,MAAQ,CACXiB,KAAMsD,MAASK,UAAU,EAAKD,OAEhC,EAAKE,YAAc,EAAKlF,MAAMkF,YAPb,E,qDAUnB,WAAqB,IAAD,OAClBrE,KAAK0D,QAAUC,aAAY,kBAAM,EAAKW,SAAQ,O,kCAGhD,WACET,cAAc7D,KAAK0D,W,kBAGrB,WACE1D,KAAKL,SAAS,CACZc,KAAMsD,MAASK,UAAUpE,KAAKmE,U,oBAYlC,WACE,OACE,sBAAKlE,UAAU,QAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BD,KAAKb,MAAMM,OAC1C,sBAAMQ,UAAU,gBAAgBb,QAASY,KAAKqE,YAA9C,oBAGA,cAAC,EAAD,CAAO5D,KAAMT,KAAKR,MAAMiB,c,GAxCGF,aCFdgE,E,kDACnB,WAAYpF,GAAQ,uCACZA,G,0CAaR,WAAU,IAAD,OACP,OACE,qBAAKc,UAAU,UAAf,SACGD,KAAKb,MAAMK,MAAMgF,KAAI,SAACC,EAAOC,GAAR,OAAkB,cAAC,EAAD,2BAA2BD,GAA3B,IAAkCJ,YAAa,kBAAM,EAAKlF,MAAMkF,YAAYK,MAAhED,EAAME,c,GAlB7BpE,aCEtB,SAASqE,IAAO,IAAD,EACFC,mBAAS,CACjC,CACEpF,KAAM,SACNC,UAAW,KACXiF,IAAKG,YAAO,IAEd,CACErF,KAAM,SACNC,UAAW,KACXiF,IAAKG,YAAO,IAEd,CACErF,KAAM,QACNC,UAAW,KACXiF,IAAKG,YAAO,IAEd,CACErF,KAAM,WACNC,UAAW,KACXiF,IAAKG,YAAO,MApBY,mBACrBtF,EADqB,KACdG,EADc,KA4C5B,OACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,CAAMT,MAAOA,EAAOD,SAtBP,SAACE,EAAMC,GACtB,IAAKD,IAASC,EAAW,OAAO,KAChCC,GAAS,SAAAoF,GAAI,4BACRA,GADQ,CAEX,CACEtF,OACAC,YACAiF,IAAKG,YAAO,YAgBd,cAAC,EAAD,CAAStF,MAAOA,EAAO6E,YAXP,SAACK,GACnBM,QAAQC,IAAIP,GACZ,IAAMQ,EAAG,YAAQ1F,GACjBwF,QAAQC,IAAIC,EAAIR,IAChBQ,EAAIC,OAAOT,EAAO,GAClB/E,GAAS,kBAAMuF,WChDnB,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86dcbdbf.chunk.js","sourcesContent":["import \"./Form.scss\";\r\nimport { Component } from 'react'\r\n\r\nexport default class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      timestamp: ''\r\n    }\r\n  }\r\n\r\n  onInputHandler(event) {\r\n    const { name, value } = event.target;\r\n    this.setState((state) => ({...state, [name]: value}));\r\n  }\r\n\r\n  onClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.addWatch(this.state.city, this.state.timestamp)\r\n    this.setState(() => ({\r\n      city: '',\r\n      timestamp: ''\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" name=\"form\">\r\n        <div className=\"form__city-name\">\r\n          <div>Название</div>\r\n          <input value={this.state.city} type=\"text\" name=\"city\" id=\"city\" onChange={this.onInputHandler.bind(this)} />\r\n        </div>\r\n        <div className=\"form__timestamp\">\r\n          <div>Временная зона</div>\r\n          <input value={this.state.timestamp} type=\"text\" name=\"timestamp\" id=\"timestamp\" onChange={this.onInputHandler.bind(this)} />\r\n        </div>\r\n        <div className=\"form__submit\">\r\n          <input type=\"submit\" value=\"Добавить\" onClick={this.onClick} />\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport moment from \"moment-timezone\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: this.props.date\r\n    };\r\n    this.clockRef = React.createRef();\r\n  }\r\n\r\n  displayCanvas(date) {\r\n    const canvasEl = this.clockRef.current;\r\n    canvasEl.setAttribute('width', 200);\r\n    canvasEl.setAttribute('height', 200);\r\n    const contextEl = this.clockRef.current.getContext(\"2d\");\r\n    contextEl.strokeRect(0, 0, canvasEl.width, canvasEl.height);\r\n\r\n    //Расчет координат центра и радиуса часов\r\n    const radiusClock = canvasEl.width / 2 - 10;\r\n    const xCenterClock = canvasEl.width / 2;\r\n    const yCenterClock = canvasEl.height / 2;\r\n\r\n    //Очистка экрана.\r\n    contextEl.fillStyle = \"#ffffff\";\r\n    contextEl.fillRect(0, 0, canvasEl.width, canvasEl.height);\r\n\r\n    //Рисуем контур часов\r\n    contextEl.strokeStyle = \"#000000\";\r\n    contextEl.lineWidth = 1;\r\n    contextEl.beginPath();\r\n    contextEl.arc(\r\n      xCenterClock,\r\n      yCenterClock,\r\n      radiusClock,\r\n      0,\r\n      2 * Math.PI,\r\n      true\r\n    );\r\n    contextEl.moveTo(xCenterClock, yCenterClock);\r\n    contextEl.stroke();\r\n    contextEl.closePath();\r\n\r\n    const radiusNum = radiusClock - 10; //Радиус расположения рисочек\r\n    let radiusPoint;\r\n\r\n    for (let tm = 0; tm < 60; tm++) {\r\n      contextEl.beginPath();\r\n      if (tm % 5 === 0) {\r\n        radiusPoint = 5;\r\n      } else {\r\n        radiusPoint = 2;\r\n      } //для выделения часовых рисочек\r\n\r\n      const xPointM =\r\n        xCenterClock +\r\n        radiusNum * Math.cos(-6 * tm * (Math.PI / 180) + Math.PI / 2);\r\n      const yPointM =\r\n        yCenterClock -\r\n        radiusNum * Math.sin(-6 * tm * (Math.PI / 180) + Math.PI / 2);\r\n      contextEl.arc(xPointM, yPointM, radiusPoint, 0, 2 * Math.PI, true);\r\n      contextEl.stroke();\r\n      contextEl.closePath();\r\n    }\r\n\r\n    //Оцифровка циферблата часов\r\n    for (let th = 1; th <= 12; th++) {\r\n      contextEl.beginPath();\r\n      contextEl.font = \"bold 25px sans-serif\";\r\n      const xText =\r\n        xCenterClock +\r\n        (radiusNum - 30) * Math.cos(-30 * th * (Math.PI / 180) + Math.PI / 2);\r\n      const yText =\r\n        yCenterClock -\r\n        (radiusNum - 30) * Math.sin(-30 * th * (Math.PI / 180) + Math.PI / 2);\r\n\r\n      if (th <= 9) {\r\n        contextEl.strokeText(th, xText - 5, yText + 10);\r\n      } else {\r\n        contextEl.strokeText(th, xText - 15, yText + 10);\r\n      }\r\n      contextEl.stroke();\r\n      contextEl.closePath();\r\n    }\r\n\r\n    //Рисуем стрелки\r\n    const lengthSeconds = radiusNum - 10;\r\n    const lengthMinutes = radiusNum - 15;\r\n    const lengthHour = lengthMinutes / 1.5;\r\n\r\n    const t_sec = 6 * date.seconds(); //Определяем угол для секунд\r\n    const t_min = 6 * (date.minutes() + (1/60) * date.seconds()); //Определяем угол для минут\r\n    const t_hour = 30 * (date.hours() + (1/60) * date.minutes()); //Определяем угол для часов\r\n\r\n    //Рисуем секунды\r\n    contextEl.beginPath();\r\n    contextEl.strokeStyle =  \"#FF0000\";\r\n    contextEl.moveTo(xCenterClock, yCenterClock);\r\n    contextEl.lineTo(xCenterClock + lengthSeconds*Math.cos(Math.PI/2 - t_sec * (Math.PI/180)),\r\n\t\t\t\tyCenterClock - lengthSeconds * Math.sin(Math.PI/2 - t_sec * (Math.PI/180)));\r\n    contextEl.stroke();\r\n    contextEl.closePath();\r\n\r\n    //Рисуем минуты\r\n    contextEl.beginPath();\r\n    contextEl.strokeStyle =  \"#000000\";\r\n    contextEl.lineWidth = 3;\r\n    contextEl.moveTo(xCenterClock, yCenterClock);\r\n    contextEl.lineTo(xCenterClock + lengthMinutes*Math.cos(Math.PI/2 - t_min * (Math.PI/180)),\r\n\t\t\t\t yCenterClock - lengthMinutes*Math.sin(Math.PI/2 - t_min * (Math.PI/180)));\r\n    contextEl.stroke();\r\n    contextEl.closePath();\r\n\r\n    //Рисуем часы\r\n    contextEl.beginPath();\r\n    contextEl.lineWidth = 5;\r\n    contextEl.moveTo(xCenterClock, yCenterClock);\r\n    contextEl.lineTo(xCenterClock + lengthHour*Math.cos(Math.PI/2 - t_hour*(Math.PI/180)),\r\n\t\t\t\t yCenterClock - lengthHour*Math.sin(Math.PI/2 - t_hour*(Math.PI/180)));\r\n    contextEl.stroke();\r\n    contextEl.closePath();\r\n\r\n    //Рисуем центр часов\r\n    contextEl.beginPath();\r\n    contextEl.strokeStyle =  \"#000000\";\r\n    contextEl.fillStyle = \"#ffffff\";\r\n    contextEl.lineWidth = 3;\r\n    contextEl.arc(xCenterClock, yCenterClock, 5, 0, 2 * Math.PI, true);\r\n    contextEl.stroke();\r\n    contextEl.fill();\r\n    contextEl.closePath();\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.setState({date: this.props.date});\r\n      this.displayCanvas(this.state.date);\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  // static propTypes = {\r\n  //   prop: PropTypes\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <canvas className=\"watch__clock\" ref={this.clockRef} id='clock'></canvas>\r\n    )\r\n  }\r\n}\r\n","import \"./Watch.scss\";\r\nimport moment from 'moment';\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Clock from \"../Clock/Clock\";\r\nmoment.tz.setDefault(\"Europe/London\");\r\n\r\nexport default class Watch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.diff = +this.props.timestamp * 60;\r\n    moment().utcOffset(this.diff);\r\n    this.state = {\r\n      date: moment().utcOffset(this.diff),\r\n    };\r\n    this.deleteWatch = this.props.deleteWatch;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: moment().utcOffset(this.diff),\r\n    });\r\n  }\r\n\r\n  static propTypes = {\r\n    data: PropTypes.shape({\r\n      city: PropTypes.string.isRequired,\r\n      timestamp: PropTypes.string.isRequired,\r\n      key: PropTypes.string.isRequired,\r\n    }),\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='watch'>\r\n        <span className='watch__city'>{this.props.city}</span>\r\n        <span className='watch__delete' onClick={this.deleteWatch}>\r\n          ✘\r\n        </span>\r\n        <Clock date={this.state.date} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './Watches.scss';\r\nimport { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Watch from '../Watch/Watch';\r\n\r\nexport default class Watches extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    state: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        city: PropTypes.string.isRequired,\r\n        timestamp: PropTypes.string.isRequired,\r\n        key: PropTypes.string.isRequired,\r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"watches\">\r\n        {this.props.state.map((watch, index) => <Watch key={watch.key} {...watch} deleteWatch={() => this.props.deleteWatch(index)} />)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.scss';\nimport { useState } from 'react'\nimport { nanoid } from 'nanoid';\nimport Form from './Components/Form/Form';\nimport Watches from './Components/Watches/Watches';\nimport Clock from './Components/Clock/Clock';\n\nexport default function App() {\n  const [state, setState] = useState([\n    {\n      city: 'Moscow',\n      timestamp: '+3',\n      key: nanoid(5)\n    },\n    {\n      city: 'London',\n      timestamp: '+1',\n      key: nanoid(5)\n    },\n    {\n      city: 'Tokyo',\n      timestamp: '+9',\n      key: nanoid(5)\n    },\n    {\n      city: 'New York',\n      timestamp: '-4',\n      key: nanoid(5)\n    }\n  ])\n\n  const addWatch = (city, timestamp) => {\n    if (!city || !timestamp) return null;\n    setState(prev => ([\n      ...prev,\n      {\n        city,\n        timestamp,\n        key: nanoid(5)\n      }\n    ]))\n  }\n\n  const deleteWatch = (index) => {\n    console.log(index);\n    const arr = [ ...state ];\n    console.log(arr[index]);\n    arr.splice(index, 1);\n    setState(() => arr);\n  }\n\n  return (\n    <div className=\"app\">\n      <Form state={state} addWatch={addWatch} />\n      <Watches state={state} deleteWatch={deleteWatch} />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}